{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","count","setCount","isValidImgUrl","isValidImdbUrl","useState","Math","random","toFixed","slice","id","touched","setTouched","useEffect","hasError","hasInvalidImgUrl","hasInvalidImdbUrl","shouldAddDangerClass","inputClassName","classNames","htmlFor","type","event","target","onBlur","NewMovie","onAdd","newMovie","setNewMovie","buttonDisabled","setButtonDisabled","pattern","notFilled","test","handleFieldChange","fieldName","prevState","method","onSubmit","preventDefault","prevCount","disabled","App","moviesFromServer","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5e30174.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  count: number,\n  setCount: (value: number) => void,\n  isValidImgUrl?: boolean,\n  isValidImdbUrl?: boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  count,\n  setCount,\n  isValidImgUrl,\n  isValidImdbUrl,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n\n  const checkCount = () => {\n    if (count > 0) {\n      setTouched(false);\n      setCount(0);\n    }\n  };\n\n  useEffect(() => {\n    checkCount();\n  }, [count]);\n\n  const hasError = touched && required && !value;\n  const hasInvalidImgUrl = touched && required\n    && value && !isValidImgUrl && (name === 'imgUrl');\n  const hasInvalidImdbUrl = touched && required\n    && value && !isValidImdbUrl && (name === 'imdbUrl');\n\n  const shouldAddDangerClass = hasError\n    || hasInvalidImgUrl || hasInvalidImdbUrl;\n\n  const inputClassName = classNames('input', {\n    'is-danger': shouldAddDangerClass,\n  });\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={inputClassName}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasInvalidImgUrl && (\n        <p className=\"help is-danger\">{`${name} is invalid`}</p>\n      )}\n\n      {hasInvalidImdbUrl && (\n        <p className=\"help is-danger\">{`${name} is invalid`}</p>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface NewMovieProps {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const NewMovie: React.FC<NewMovieProps> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n  // тут !'' = true значить кнопка disabled\n  const notFilled = !newMovie.title || !newMovie.imgUrl\n    || !newMovie.imdbUrl || !newMovie.imdbId;\n\n  const isValidImgUrl = pattern.test(newMovie.imgUrl);\n  const isValidImdbUrl = pattern.test(newMovie.imdbUrl);\n\n  const handleFieldChange = (fieldName: string, value: string) => {\n    setNewMovie(prevState => ({\n      ...prevState,\n      [fieldName]: value,\n    }));\n  };\n\n  const clearForm = () => {\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    onAdd(newMovie);\n    clearForm();\n    setCount(prevCount => prevCount + 1);\n  };\n\n  const checkFields = () => {\n    if ((notFilled === false)\n      && (isValidImgUrl === true) && (isValidImdbUrl === true)) {\n      setButtonDisabled(notFilled);\n    }\n  };\n\n  useEffect(() => {\n    checkFields();\n  }, [newMovie]);\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={value => handleFieldChange('title', value)}\n        required\n        count={count}\n        setCount={setCount}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={value => handleFieldChange('description', value)}\n        count={count}\n        setCount={setCount}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        required\n        onChange={value => handleFieldChange('imgUrl', value)}\n        count={count}\n        setCount={setCount}\n        isValidImgUrl={isValidImgUrl}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        required\n        onChange={value => handleFieldChange('imdbUrl', value)}\n        count={count}\n        setCount={setCount}\n        isValidImdbUrl={isValidImdbUrl}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        required\n        onChange={value => handleFieldChange('imdbId', value)}\n        count={count}\n        setCount={setCount}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={buttonDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n  const addMovies = (movie: Movie) => {\n    setMovies(prevMovies => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={addMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}